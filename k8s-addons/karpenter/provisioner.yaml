apiVersion: karpenter.sh/v1alpha5
kind: Provisioner
metadata:
  name: default
spec:
  # Requisitos para os nós que o Karpenter irá criar.
  requirements:
    # CORRIGIDO: Usando a label padrão do Kubernetes para arquitetura.
    - key: kubernetes.io/arch
      operator: In
      values: ["amd64"]
    - key: karpenter.k8s.aws/instance-category
      operator: In
      values: ["c", "m", "r"] # Famílias de instâncias permitidas (C, M, R)
    - key: karpenter.k8s.aws/instance-generation
      operator: Gt
      values: ["2"] # Apenas instâncias de geração 2 ou superior
    # Adicionando o tipo de capacidade para mais clareza (boa prática)
    - key: karpenter.sh/capacity-type
      operator: In
      values: ["on-demand"]

  # Limita o total de recursos que este provisioner pode alocar no cluster.
  limits:
    resources:
      cpu: "100"
      memory: 100Gi

  # Provedor de nuvem e configurações específicas
  providerRef:
    name: default

  # Tempo de vida dos nós em segundos. Nós vazios serão removidos após este tempo.
  ttlSecondsAfterEmpty: 30
---
apiVersion: karpenter.k8s.aws/v1alpha1
kind: AWSNodeTemplate
metadata:
  name: default
spec:
  # Configurações específicas da AWS para os nós criados.
  subnetSelector:
    karpenter.sh/discovery: fiap-eks
  securityGroupSelector:
    karpenter.sh/discovery: fiap-eks
