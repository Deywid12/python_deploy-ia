name: CI - Build, Teste e Geração com IA

on:
  pull_request:

env:
  AWS_REGION: "us-east-1"

jobs:
  build-and-test:
    name: Build, Teste e Geração de Artefatos
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: write
      pull-requests: write
      id-token: write
    steps:
      - name: 1. Checkout do código
        uses: actions/checkout@v4
        
      - name: 2. AI Code Review
        if: github.event_name == 'pull_request'
        uses: Codium-ai/pr-agent@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_KEY: ${{ secrets.OPENAI_KEY }}
          # GOOGLE_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          # CONFIG.MODEL: "gemini/gemini-1.5-flash-latest"

      - name: 3. Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: 4. Instalar dependências do script de IA
        run: pip install requests

      - name: 5. Baixar e Executar Script Gerador de Dockerfile
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: |
          echo "Baixando script de IA..."
          curl -sSL ${{ secrets.GEMINI_GERADOR_DOCKERFILE_URL }} -o generate_dockerfile.py
          echo "Executando script..."
          python generate_dockerfile.py

      - name: 6. Commitar o Dockerfile gerado (se estiver na branch main)
        if: github.ref == 'refs/heads/main'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "ci: ✨ Gera e commita Dockerfile via IA"
          file_pattern: Dockerfile

      - name: 7. Build Local da Imagem Docker para Validação
        run: |
          echo "Iniciando build local para validar o Dockerfile..."
          docker build -t local-validation-image:${{ github.sha }} .
          echo "✅ Dockerfile validado com sucesso."

      - name: 8. Upload dos Artefatos para o CD
        uses: actions/upload-artifact@v4
        with:
          name: deploy-artifacts
          path: |
            Dockerfile
            k8s/
            k8s-addons/
            app.py
            requirements.txt
